<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.blog.repository.BlogRepository">

    <!-- 리턴타입이 entity등의 클래스로 구성된 경우 패키지명부터 적어준다-->
    <select id="findAll" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id AS blogId,
            writer,
            blog_title AS blogTitle,
            blog_content AS blogContent,
            published_at AS publishedAt,
            updated_at AS updatedAt,
            blog_count AS blogCount
        FROM blog
    </select>

    <select id="findById" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id AS blogId,
            writer,
            blog_title AS blogTitle,
            blog_content AS blogContent,
            published_at AS publishedAt,
            updated_at AS updatedAt,
            blog_count AS blogCount
        FROM
            blog
        WHERE
            blog_id = #{blogId} <!-- findById 메서드의 파라미터는 #{} 안에 작성 -->
    </select>

    <insert id="save" parameterType="com.spring.blog.entity.Blog">
        INSERT INTO
           blog (writer, blog_title, blog_content)
        VALUES
            (#{writer}, #{blogTitle}, #{blogContent})
    </insert>

    <delete id="deleteById" parameterType="long">
        DELETE FROM
                blog
        WHERE
            blog_id = #{blogId}
    </delete>

    <!-- 수정 로직을 아래에 쿼리문까지 작성해주세요 수정 항목은 제목, 본문, 업데이트시각 -->

    <update id="update" parameterType="com.spring.blog.entity.Blog">
        UPDATE
            blog
        SET
            blog_title = #{blogTitle},
            blog_content = #{blogContent},
            updated_at = now()
        WHERE
            blog_id = #{blogId}
    </update>


    <!-- 테스트를 위한 퀴리문들-->
    <update id="createBlogTable">
        CREATE TABLE IF NOT EXISTS blog(
            blog_id INT AUTO_INCREMENT PRIMARY KEY,
            writer VARCHAR(16) NOT NULL,
            blog_title VARCHAR(200) NOT NULL,
            blog_content VARCHAR(4000) NOT NULL,
            published_at DATETIME DEFAULT now(),
            updated_at DATETIME DEFAULT now(),
            blog_count INT DEFAULT 0
        )
    </update>

    <update id="dropBlogTable">
        DROP TABLE blog
    </update>

    <insert id="insertTestData">
        INSERT INTO blog VALUES
            (null, '1번유저', '1번제목', '1번본문', now(), now(), null),
            (null, '2번유저', '2번제목', '2번본문', now(), now(), null),
            (null, '3번유저', '3번제목', '3번본문', now(), now(), null)
    </insert>

</mapper>